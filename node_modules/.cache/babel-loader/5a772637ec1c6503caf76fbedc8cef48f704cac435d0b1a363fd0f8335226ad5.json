{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Downloads\\\\todolist-app-react-js-main\\\\src\\\\components\\\\TabelaItems.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { EditTodoForm } from \"./EditTodoForm\"; // Importe o componente EditTodoForm\nimport { Todo } from \"./Todo\"; // Importe o componente Todo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabelaItems = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [nome, setNome] = useState(\"\");\n  const [custo, setCusto] = useState(\"\");\n  const [dataLimite, setDataLimite] = useState(\"\");\n  const [editingTask, setEditingTask] = useState(null);\n  const fetchItems = async () => {\n    try {\n      const response = await axios.get(\"https://listadetarefas-2.onrender.com/tarefas\");\n      setItems(response.data);\n    } catch (error) {\n      console.error(\"Erro ao buscar os itens\", error);\n    }\n  };\n  const addItem = async e => {\n    e.preventDefault();\n    const ordemApresentacao = items.length > 0 ? Math.max(...items.map(item => item.ordemApresentacao)) + 1 : 1;\n    const formattedDataLimite = format(new Date(dataLimite), \"dd-MM-yyyy\");\n    const newItem = {\n      nome,\n      custo: parseFloat(custo),\n      dataLimite: formattedDataLimite,\n      ordemApresentacao\n    };\n    try {\n      await axios.post(\"https://listadetarefas-2.onrender.com/tarefas\", newItem);\n      fetchItems();\n      setNome(\"\");\n      setCusto(\"\");\n      setDataLimite(\"\");\n    } catch (error) {\n      console.error(\"Erro ao adicionar item\", error.response ? error.response.data : error.message);\n    }\n  };\n  const editTodo = async (newValue, id) => {\n    try {\n      await axios.put(`https://listadetarefas-2.onrender.com/tarefas/${id}`, {\n        nome: newValue.nome,\n        // Acesse o campo \"nome\" da tarefa\n        custo: newValue.custo,\n        // Acesse o campo \"custo\" se necessário\n        dataLimite: newValue.dataLimite // Acesse o campo \"dataLimite\" se necessário\n        // Inclua outros campos que precisam ser atualizados\n      });\n\n      fetchItems();\n      setEditingTask(null);\n    } catch (error) {\n      console.error(\"Erro ao atualizar a tarefa\", error.response ? error.response.data : error.message);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`https://listadetarefas-2.onrender.com/tarefas/${id}`);\n      fetchItems();\n    } catch (error) {\n      console.error(\"Erro ao deletar a tarefa\", error.response ? error.response.data : error.message);\n    }\n  };\n  const toggleComplete = id => {\n    // Essa função pode ser implementada se você quiser marcar tarefas como concluídas\n    console.log(`Tarefa com ID ${id} completada`);\n  };\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tabela de Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addItem,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome\",\n        value: nome,\n        onChange: e => setNome(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Custo\",\n        value: custo,\n        onChange: e => setCusto(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Data Limite\",\n        value: dataLimite,\n        onChange: e => setDataLimite(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Adicionar Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      editTodo: editTodo,\n      task: editingTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n        task: item,\n        deleteTodo: deleteTodo,\n        editTodo: setEditingTask // Passa a tarefa para edição\n        ,\n        toggleComplete: toggleComplete\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(TabelaItems, \"p0jrXfd6sx5MmF/quCQhkD1tWV0=\");\n_c = TabelaItems;\nexport default TabelaItems;\nvar _c;\n$RefreshReg$(_c, \"TabelaItems\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","EditTodoForm","Todo","TabelaItems","items","setItems","nome","setNome","custo","setCusto","dataLimite","setDataLimite","editingTask","setEditingTask","fetchItems","response","get","data","error","console","addItem","e","preventDefault","ordemApresentacao","length","Math","max","map","item","formattedDataLimite","Date","newItem","parseFloat","post","message","editTodo","newValue","id","put","deleteTodo","delete","toggleComplete","log","target","value"],"sources":["C:/Users/julio/Downloads/todolist-app-react-js-main/src/components/TabelaItems.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport { EditTodoForm } from \"./EditTodoForm\"; // Importe o componente EditTodoForm\r\nimport { Todo } from \"./Todo\"; // Importe o componente Todo\r\n\r\nconst TabelaItems = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [nome, setNome] = useState(\"\");\r\n  const [custo, setCusto] = useState(\"\");\r\n  const [dataLimite, setDataLimite] = useState(\"\");\r\n  const [editingTask, setEditingTask] = useState(null);\r\n\r\n  const fetchItems = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://listadetarefas-2.onrender.com/tarefas\"\r\n      );\r\n      setItems(response.data);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar os itens\", error);\r\n    }\r\n  };\r\n\r\n  const addItem = async (e) => {\r\n    e.preventDefault();\r\n    const ordemApresentacao =\r\n      items.length > 0\r\n        ? Math.max(...items.map((item) => item.ordemApresentacao)) + 1\r\n        : 1;\r\n\r\n    const formattedDataLimite = format(new Date(dataLimite), \"dd-MM-yyyy\");\r\n\r\n    const newItem = {\r\n      nome,\r\n      custo: parseFloat(custo),\r\n      dataLimite: formattedDataLimite,\r\n      ordemApresentacao,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\r\n        \"https://listadetarefas-2.onrender.com/tarefas\",\r\n        newItem\r\n      );\r\n      fetchItems();\r\n      setNome(\"\");\r\n      setCusto(\"\");\r\n      setDataLimite(\"\");\r\n    } catch (error) {\r\n      console.error(\r\n        \"Erro ao adicionar item\",\r\n        error.response ? error.response.data : error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const editTodo = async (newValue, id) => {\r\n    try {\r\n      await axios.put(`https://listadetarefas-2.onrender.com/tarefas/${id}`, {\r\n        nome: newValue.nome, // Acesse o campo \"nome\" da tarefa\r\n        custo: newValue.custo, // Acesse o campo \"custo\" se necessário\r\n        dataLimite: newValue.dataLimite, // Acesse o campo \"dataLimite\" se necessário\r\n        // Inclua outros campos que precisam ser atualizados\r\n      });\r\n      fetchItems();\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      console.error(\r\n        \"Erro ao atualizar a tarefa\",\r\n        error.response ? error.response.data : error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      await axios.delete(`https://listadetarefas-2.onrender.com/tarefas/${id}`);\r\n      fetchItems();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Erro ao deletar a tarefa\",\r\n        error.response ? error.response.data : error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    // Essa função pode ser implementada se você quiser marcar tarefas como concluídas\r\n    console.log(`Tarefa com ID ${id} completada`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tabela de Items</h1>\r\n      <form onSubmit={addItem}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nome\"\r\n          value={nome}\r\n          onChange={(e) => setNome(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Custo\"\r\n          value={custo}\r\n          onChange={(e) => setCusto(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"Data Limite\"\r\n          value={dataLimite}\r\n          onChange={(e) => setDataLimite(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Adicionar Item</button>\r\n      </form>\r\n\r\n      {editingTask && <EditTodoForm editTodo={editTodo} task={editingTask} />}\r\n\r\n      <div className=\"todo-list\">\r\n        {items.map((item) => (\r\n          <Todo\r\n            key={item.id}\r\n            task={item}\r\n            deleteTodo={deleteTodo}\r\n            editTodo={setEditingTask} // Passa a tarefa para edição\r\n            toggleComplete={toggleComplete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabelaItems;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}