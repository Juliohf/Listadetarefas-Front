{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Downloads\\\\todolist-app-react-js-main\\\\src\\\\components\\\\TabelaItems.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { EditTodoForm } from \"./EditTodoForm\"; // Importe o componente EditTodoForm\nimport { Todo } from \"./Todo\"; // Importe o componente Todo\nimport { TodoForm } from \"./TodoForm\"; // Importe o componente TodoForm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabelaItems = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n  const fetchItems = async () => {\n    try {\n      const response = await axios.get(\"https://listadetarefas-2.onrender.com/tarefas\");\n      setItems(response.data);\n    } catch (error) {\n      console.error(\"Erro ao buscar os itens\", error);\n    }\n  };\n  const addTodo = async nome => {\n    const ordemApresentacao = items.length > 0 ? Math.max(...items.map(item => item.ordemApresentacao)) + 1 : 1;\n    const newItem = {\n      nome,\n      custo: 0,\n      // Você pode adicionar lógica para definir um custo padrão\n      dataLimite: \"01-01-2025\",\n      // Defina um valor padrão para a dataLimite se necessário\n      ordemApresentacao\n    };\n    try {\n      await axios.post(\"https://listadetarefas-2.onrender.com/tarefas\", newItem);\n      fetchItems();\n    } catch (error) {\n      console.error(\"Erro ao adicionar item\", error.response ? error.response.data : error.message);\n    }\n  };\n  const editTodo = async (newValue, id) => {\n    try {\n      await axios.put(`https://listadetarefas-2.onrender.com/tarefas/${id}`, {\n        nome: newValue.nome,\n        // Acesse o campo \"nome\" da tarefa\n        custo: newValue.custo,\n        // Acesse o campo \"custo\" se necessário\n        dataLimite: newValue.dataLimite // Acesse o campo \"dataLimite\" se necessário\n        // Inclua outros campos que precisam ser atualizados\n      });\n\n      fetchItems();\n      setEditingTask(null);\n    } catch (error) {\n      console.error(\"Erro ao atualizar a tarefa\", error.response ? error.response.data : error.message);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`https://listadetarefas-2.onrender.com/tarefas/${id}`);\n      fetchItems();\n    } catch (error) {\n      console.error(\"Erro ao deletar a tarefa\", error.response ? error.response.data : error.message);\n    }\n  };\n  const toggleComplete = id => {\n    // Essa função pode ser implementada se você quiser marcar tarefas como concluídas\n    console.log(`Tarefa com ID ${id} completada`);\n  };\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tabela de Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      editTodo: editTodo,\n      task: editingTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n        task: item,\n        deleteTodo: deleteTodo,\n        editTodo: setEditingTask,\n        toggleComplete: toggleComplete\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(TabelaItems, \"CNRJcMJew1KC+1z3c85WDbP6m3s=\");\n_c = TabelaItems;\nexport default TabelaItems;\nvar _c;\n$RefreshReg$(_c, \"TabelaItems\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","EditTodoForm","Todo","TodoForm","TabelaItems","items","setItems","editingTask","setEditingTask","fetchItems","response","get","data","error","console","addTodo","nome","ordemApresentacao","length","Math","max","map","item","newItem","custo","dataLimite","post","message","editTodo","newValue","id","put","deleteTodo","delete","toggleComplete","log"],"sources":["C:/Users/julio/Downloads/todolist-app-react-js-main/src/components/TabelaItems.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport { EditTodoForm } from \"./EditTodoForm\"; // Importe o componente EditTodoForm\r\nimport { Todo } from \"./Todo\"; // Importe o componente Todo\r\nimport { TodoForm } from \"./TodoForm\"; // Importe o componente TodoForm\r\n\r\nconst TabelaItems = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n\r\n  const fetchItems = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://listadetarefas-2.onrender.com/tarefas\"\r\n      );\r\n      setItems(response.data);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar os itens\", error);\r\n    }\r\n  };\r\n\r\n  const addTodo = async (nome) => {\r\n    const ordemApresentacao =\r\n      items.length > 0\r\n        ? Math.max(...items.map((item) => item.ordemApresentacao)) + 1\r\n        : 1;\r\n    const newItem = {\r\n      nome,\r\n      custo: 0, // Você pode adicionar lógica para definir um custo padrão\r\n      dataLimite: \"01-01-2025\", // Defina um valor padrão para a dataLimite se necessário\r\n      ordemApresentacao,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\r\n        \"https://listadetarefas-2.onrender.com/tarefas\",\r\n        newItem\r\n      );\r\n      fetchItems();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Erro ao adicionar item\",\r\n        error.response ? error.response.data : error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const editTodo = async (newValue, id) => {\r\n    try {\r\n      await axios.put(`https://listadetarefas-2.onrender.com/tarefas/${id}`, {\r\n        nome: newValue.nome, // Acesse o campo \"nome\" da tarefa\r\n        custo: newValue.custo, // Acesse o campo \"custo\" se necessário\r\n        dataLimite: newValue.dataLimite, // Acesse o campo \"dataLimite\" se necessário\r\n        // Inclua outros campos que precisam ser atualizados\r\n      });\r\n      fetchItems();\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      console.error(\r\n        \"Erro ao atualizar a tarefa\",\r\n        error.response ? error.response.data : error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      await axios.delete(`https://listadetarefas-2.onrender.com/tarefas/${id}`);\r\n      fetchItems();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Erro ao deletar a tarefa\",\r\n        error.response ? error.response.data : error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    // Essa função pode ser implementada se você quiser marcar tarefas como concluídas\r\n    console.log(`Tarefa com ID ${id} completada`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tabela de Items</h1>\r\n\r\n      {/* Integrando o TodoForm */}\r\n      <TodoForm addTodo={addTodo} />\r\n\r\n      {editingTask && <EditTodoForm editTodo={editTodo} task={editingTask} />}\r\n\r\n      <div className=\"todo-list\">\r\n        {items.map((item) => (\r\n          <Todo\r\n            key={item.id}\r\n            task={item}\r\n            deleteTodo={deleteTodo}\r\n            editTodo={setEditingTask}\r\n            toggleComplete={toggleComplete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabelaItems;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}